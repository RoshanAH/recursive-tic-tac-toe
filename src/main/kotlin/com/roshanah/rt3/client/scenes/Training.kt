package com.roshanah.rt3.client.scenes

import com.roshanah.rt3.client.elements.Player
import com.roshanah.rt3.client.foreground
import com.roshanah.rt3.client.rendering.GameRenderer
import com.roshanah.rt3.client.rendering.getTransform
import com.roshanah.rt3.client.training.Trainer
import com.roshanah.rt3.ml.Network
import org.openrndr.*
import org.openrndr.draw.isolated
import org.openrndr.extra.shapes.roundedRectangle
import org.openrndr.math.Matrix44
import kotlin.math.pow

class Training(program: Program, transform: Matrix44, depth: Int) : Scene(program, transform) {
//    val trainer = Trainer(depth, depth + 2, 9.0.pow(depth + 1).toInt() * 2)

        val trainer = Trainer(0, Network.deserialize("[[[-0.3165640049806086, -0.14805109794046475, -0.24958090828850968, 0.1919573779943057, 0.15731695768934323, 0.15229466129383243, -0.2165519567061712, -0.1360269970263429, 0.3137373020108255, -0.29666014300787685, 0.007386279510033673, 0.03712378484054853, -0.2272305465626992, 0.1679866997270761, 0.15920609393868534, 0.2306246044061352, 0.23196109716564345, -0.0979980231713093, 0.20564749583180644], [-0.3092739858169411, -0.09945529775382156, -0.17087367552102886, 0.035682847437926844, -0.3157129249619851, 0.31909048836048015, 0.10074308852933997, 0.03183133450540841, 0.21057426797617496, 0.03310803281536744, -0.00852199630313507, -0.09249360617085893, 0.17104053712154976, -0.01830085885615141, 0.09515216747644271, 0.1884412275074354, -0.09316326028695006, 0.04466468902100637, -0.31721399409699547], [0.20703295320391815, 0.1402532319995567, -0.2662761744829585, -0.31475124203882693, 0.21809569392181427, -0.17174046053011027, -0.24639199010847118, 0.28861513255531746, 0.07953404727392148, -0.0225649396245056, -0.26682060268866353, 0.047736245980946106, -0.1965167865861789, 0.10984161626142014, -0.1571210315705237, -0.07681912024929946, -0.005977828424765678, -0.2406378355305251, 0.1591827703237468], [0.15901747473084765, 0.1666038963978779, -0.08554833567280892, -0.3080476238254686, 0.04130420214889538, -0.10867471617598677, 0.1866925229212287, -0.15386771701377813, 0.06595706323724483, 0.02287317564036035, 0.12746195191936846, 0.20202187062205876, -0.08291227823222332, -0.27014898800702053, 0.10214103920713352, -0.18459241454165132, 0.26748185587236806, 0.18276955898936365, -0.2052521106011953], [-0.2660464934049847, 0.11210219334294963, 0.27933927090639993, -0.19033657918850824, 0.20183154504989342, -0.31051135546892533, -0.26248151116549767, 0.05289179647649868, -0.007075616842722316, -0.09142336705393618, 0.2898661684805244, 0.06914561995872244, 0.07683174561721037, -0.09069222319746524, 0.24846815633649272, -0.23297267656302834, -0.08906505413341625, -0.16601315121119647, -0.04673628916564918], [-0.20767299425966249, -0.11678921461982747, 0.303834206050925, -0.05099566769255279, 0.1380004021445012, -0.09092097801229884, -0.28627716856934465, -0.10136443415371846, 0.16601853533682295, 0.32067618896592726, -0.02608339128470712, -0.19710698176773153, 0.24465139697157287, 0.05959166795346683, -0.16701408515356114, 0.18205191201852045, -0.2530106664119184, 0.1253371191623255, -0.28950684712472197], [-0.0757982512599551, -0.13673982171838756, -0.033298091085655075, -0.11531007583578069, -0.15948674430107837, 0.22155097781169375, -0.006887139205124124, 0.21552300576713593, 0.07007405386048549, 0.1921196566045192, -0.24057272675439606, 0.31990926380352197, -0.16633586260702837, -0.0404182731154642, -0.20120319958202817, -0.16965019631861306, -0.09801914648883928, -0.2326135253018036, -0.00872704208668099], [-0.16383302003971362, -0.06675775258542667, -0.090019797892657, -0.07513120156110402, -0.017171517062770588, 0.09662189386069679, -0.1719678467264436, 0.12951519425175667, -0.22652421902250292, -0.20659795724368318, -0.09518013937769125, 0.039143788490790955, -0.07853511782123021, 0.29449248921444854, -0.11087023917830824, 0.24212757363953977, -0.25409765899776876, 0.3100380976051726, -0.10055777575091074], [-0.05218489097533694, 0.23989813970436258, -0.1445602217633632, 0.0675767653298279, 0.09018948429514602, 0.14656860920593515, 0.2428776936234979, 0.10650310975049002, 0.1217663119532823, 0.3163084098561114, 0.30300176057395084, 0.2973813899169305, -0.14564184410335249, 0.07127280913498546, 0.10208986549742288, -0.05021977717168239, 0.24298863045272492, -0.04460757506379545, 0.2736975453265943], [-0.3011384990525042, 0.3288031988589462, 0.1101551294268528, 0.17932062893096803, -0.1590320380252122, -0.2099174778939058, 0.10143153008069963, 0.1657024392861294, 0.1859509800271138, -0.076804207085923, 0.2605974874025959, -0.16601590489223458, 0.20558737133150382, 0.29708327605001805, -0.2316556259058118, 0.003926762489032262, -0.29948368828153077, -0.2721994656262606, 0.025528242738149614], [0.17579812277212425, 0.12366610225557487, 0.15386218319763206, 0.12091456135021013, 0.22482279431823635, -0.3070560628671488, -0.11104711607262793, -0.29054443459308876, 0.06195618988169953, 0.12993148993558384, 0.29558772580673437, -0.13362298649895818, 0.13797954482626892, 0.09610986348953757, 0.24014039366566178, 0.12694901723553292, 0.2401372869084734, 0.011209640781236017, -0.154637240367835], [-0.05922493219506782, -0.26528821113740914, -0.313354797838298, -0.14004495565741443, -0.22839729538279613, -0.1160160777161815, -0.043210798276587255, 0.13840184956201734, -0.04961520460065876, -0.2509312082249518, 0.07256845525692086, 0.2548238716687442, 0.10187299492327806, 0.2643173484648684, -0.003913137483378382, 0.13961705536124688, 0.12450330785016586, 0.26168145544833904, 0.32415134411413526], [0.12143501545511468, 0.23088950906921749, 0.008922500436760445, -0.20637939470693137, 0.22021573152651291, 0.05248191233321415, 0.12209031303988029, -0.31855928738661615, 0.3076558443050466, 0.24775742968821354, 0.12668702592743364, 0.1426339054029524, 0.22325207609347464, -0.2285714823145793, -0.22685071112277289, 0.16465546215400564, 0.09824839627574775, 0.14325169268140367, -0.03153401047588703], [-0.056931769473341026, -0.17224561245720094, 0.052119208292056046, -0.2305255212779666, 0.3007304054054098, -0.07087385577154608, 0.1511555094009282, -0.22292738087192726, 0.11896530917140145, 0.0898602795322511, 0.005088479196902895, -0.278527624542932, -0.024966560671136444, -0.30653350514641836, 0.22744599441411614, -0.09752485950828467, 0.17289261780535564, -0.04599554381471926, 0.11019886809300561], [0.09014191672778293, 0.20529470143167083, 0.32512076741120827, 0.2974196863880996, 0.2777543517499492, -0.2840330253532695, 0.1010833092855389, 0.15612471540871387, 0.23608332782337751, -0.12619244649469255, 0.08198724950751404, -0.10704515436318889, 0.26620328092088724, 0.2118192777977974, -0.2566000693487263, -0.22554287602949327, -0.14303312633917883, -0.1973578299381445, 0.10681672248673568], [-0.16421663186366986, 0.284326882530086, 0.02225923906855366, 0.29458788477619136, -0.13372000687598765, -0.17990189648565272, -0.10259640730266203, -0.25937581177950847, -0.29621216685564605, -0.29397329713204745, -0.19852223258300114, 0.025131008703105934, -0.051549748696371425, -0.30568649060038633, 0.27307965690423347, 0.10169021771629971, -0.09670650881448642, -0.029147055038034348, -0.09261777532414706], [-0.2923593026162704, -0.273345758908942, 0.19725068351019603, -0.2472682128430206, 0.31655459984628187, -0.1861687725596309, -0.08020935447375162, 0.0698575544790588, -0.17362837292744393, 0.31834456800378497, -0.044684511415424163, -0.02480193761088591, 0.060282562658714, -0.1460932860960376, -0.2532401326115408, 0.3057774323906082, -0.06065985877905257, 0.08076547495997546, -0.09959649906940918], [0.03290438193509104, -0.04312094639379453, -0.08514048047271172, 0.26564243766143025, -0.1768927129788702, -0.08566415928670042, 0.27957573883452097, 0.12477387653226825, -0.15692416355107533, 0.3107506793102787, -0.30478331137074793, -0.07145907202512923, -0.14640603121331425, 0.3080161961308452, 0.2779524091265149, 0.1458997267094826, 0.02917961510076231, 0.30111553974262173, 0.32706125318685814]], [[-0.019632384726532545, 0.2966006407749124, 0.009310137891135583, -0.18011536886372276, 0.0696172085882007, 0.1954069214512059, -0.03717005880096255, -0.02742618179725152, -0.25456428111189583, -0.3126768536753456, -0.1944473875314971, -0.001742979732600035, 0.3019215260395964, 0.24961008983260838, -0.20364243647951036, 0.12880657304449408, -0.10696832925365116, -0.2712124869773051, -0.19711767457084195], [0.08646599629310249, 0.21738733721902387, 9.269918385013821E-4, 0.16432577342603152, 0.07380527988818704, -0.10426629677903196, 0.21600442524554317, -0.17992596746743147, -0.2752824618555601, 0.244866362781842, 0.23531906777024433, -0.13239659329966688, 0.273673312906271, 0.06539641909809592, 0.18888569061049876, 0.09295910461109114, -0.03601568741212585, -0.31169966655871806, -0.18138879275849965], [-0.14931411625087612, -0.17576787844008393, -0.107283133543402, -0.07667530123599635, -0.06102378871619646, 0.060000276586270725, 0.202499527805981, -0.2106169184698412, 0.008019319486304586, -0.17419287503676908, 0.17328177194562686, -0.2564755613578396, -0.06203267970151629, 0.10212165256879391, -0.1488149130427798, 0.04706935327719328, -0.1211943518626115, 0.14507690393763664, 0.2703924020100249], [-0.23181331143379968, -0.28657118816246274, 0.14875583235332818, 0.28752642815436097, 0.03750886278606654, 0.03291447036375521, -0.1787379674505689, -0.2937201179332387, 0.07833492432023569, -0.18764562398314164, -0.21495664313295862, -0.03489163265654231, -0.2808711159761157, 0.2698735113357348, -0.13553553154198444, 0.2093335930161178, -0.11159712541184309, 0.0754942196904729, 0.1759479378731772], [0.1622973873469098, 0.12260564662543877, 0.20287173591005225, 0.2689659772336239, 0.25953899208484477, 0.14046563362973977, 0.09129606919748286, -0.10727810870506785, 0.25506062238752225, 0.25482092625817254, 0.02024514235667135, 0.043410303865309065, 0.02324646829909378, -0.06092392607758559, 0.26851797319332704, -0.24936655569396177, -0.31661403342723976, 0.2196813947063882, 0.11953050461857663], [0.1976163700450451, -0.14282813471523972, 0.044198543675117226, -0.2904223625340842, 0.013043976956242855, 0.22549828237478842, 0.02687163064674725, -0.26179219497359735, -0.09228397562342344, -0.2663481957933592, 0.1942535377104158, 0.24032702324789726, 0.25221437256596024, 0.29183775110840876, 0.18391133457484293, 0.023817058559450426, -0.11591311121876689, -0.23910918347392762, 0.059693531965466166], [-0.11680271315796761, -0.2871360412866901, -0.05395455281659297, -0.22712852316661888, -0.2835160309050085, 0.22214338976540307, -0.0968356073682599, -0.22770341089266738, -0.05392809753728812, -0.0690921485578908, 0.27810511108105984, -0.05236906577569714, 0.23358679919434128, -0.2401754130708431, 0.029123766058893243, 0.10654180814600062, 0.22117799150913542, -0.20994865366786872, -0.19268282891367927], [0.06890272626422404, 0.18648297390517113, -0.27892564629835404, -0.1395428530382689, 0.1791675263500644, 0.16810955777268907, 0.1175009248724538, -0.12763547835338615, 0.16830986456255756, -0.2794363506458418, 0.0927052775738403, -0.1623802915697513, 0.31824293302317996, -0.10638684537632417, -0.10475268862866828, -0.07032239042628391, -0.09999925455003918, 0.23447862650571918, 0.16725940611748594], [0.08620794651237111, 0.14184017224445603, 0.17363456068375913, 0.18122459219447995, 0.20410135195227125, 0.02547093211362292, 0.0014908580640485812, -0.032705936010940045, 0.12947448657546037, -0.013824213134596303, 0.2808314320620983, 0.04567146923981969, 0.10398127549565817, -0.2947701253792199, 0.23497434263484818, -0.10084888221724349, 0.08924228539604881, 0.26952416308898397, 0.26328646919798215], [-0.2147601923233408, -0.2511945391386698, -0.24305643481544123, 0.3043648749052148, -0.32319562058984175, -0.042039519439984636, 0.12228272710797942, -0.30426966652839205, -0.2179706392191739, -0.07208567052282733, 0.25612344448002244, 0.2726936642972943, -0.01040686631893466, -0.19431115090861137, -0.3048635996188859, -0.20989964544409523, 0.27836292236030646, 0.24133329749876006, -0.16967878571218445], [0.08394742613521672, -0.22687858033778463, -0.1532610633277042, 0.19066847474140233, -0.021226333089160835, -0.08987686950107121, 0.2192256468828625, 0.1930977501854181, 0.2749241738638267, 0.16158882160680652, -0.30368752495873286, -0.0713281267811384, 0.06226422960038493, -0.2772521445237243, 0.33966164756162054, 0.22926358462385332, -0.1088348988091909, 0.31222696168950437, -0.03312110924816489], [0.08344952399588561, -0.05437192468665711, -0.003171690838441715, 0.011708990730248291, -0.23134001048823286, -0.1506775524623586, 0.10139672845586403, -0.18174335837950797, 0.04613312139876856, 0.12052976366084915, 0.04725650921105842, -0.043719931325875455, 0.25347492401059735, -0.09268548634070231, -0.022998173428959635, 0.17025891738875626, 0.20770458130127717, 0.12215293899209623, -0.28136808041356515], [0.012970045787782266, 0.0266845519629011, -0.02424425658430524, -0.21048513977749297, 0.25803866199363484, -0.30295436796521985, 0.061817767165865026, 0.06212739094666693, -0.2782934642120152, -0.2423080681229256, 0.034734243098812845, -0.05988918988926227, 0.2824570280807426, -0.16098996739977722, 0.09088177658609083, -0.2207011596204332, -0.22487032319095396, -0.2779418436947578, -0.17475507846848623], [-0.13031231057338227, -0.18282276662046243, 0.05047748794086394, -0.22006617515075008, -0.06532574390638049, -0.15975158410600904, 0.28677663270529724, 0.2140755922134092, -0.11820551883874297, -0.08843883506845661, -0.08406414891820839, 0.04227857608597985, -0.30015387925364007, -0.04347244045837727, 0.0282341066058828, -0.13734766166182424, -0.2901594479431031, -0.05005635230281371, 0.11632444839448816], [-0.005282729687810145, -0.03604754608306437, -0.08312098381649481, -0.191451832233934, -0.17718259144525847, -0.05026282673179376, -0.017697310003529525, 0.2655859665561528, 0.13715535542356042, 0.25248865434377804, 0.27335313416291385, -0.15987082547415882, 0.2784388689912459, 0.26554346923297767, -0.09816859451189164, 0.10495457870233575, 0.11067398041286965, -0.20212748768654912, -0.28105500638574427], [-0.3264104272907497, -0.21828474573848017, 0.07676980502333534, 0.06895178206885783, -0.01559185161264978, 0.1000916196543141, 0.14769389979872122, -0.06204469361476225, 0.1539695006215267, -0.29833273193342275, -0.11683615131352709, 0.24027651379972087, 0.21741703489490505, 0.2811870704430001, -0.27889678264679524, 0.016578016830922904, 0.050184310050714755, -0.10602893482350274, 0.1399680611756814], [-0.20781396377350622, 0.012999580613104985, -0.021647375383863167, 0.09429193663028791, 0.28289747066684917, -0.27848120887099265, -0.3074682052820895, 0.18838571013259497, 0.26708286873907955, -0.0504250045016941, 0.26854371744647837, -0.19697779208490832, -0.07964547174316644, -0.29197079018691346, 0.21313141874061636, 0.03271713458394574, 0.02637215858415411, -0.2051790234332963, -0.2338778524496865], [-0.30812701353800265, 0.1322147960161509, -0.2738673141237699, -0.23335324487560222, -0.3038668805281121, -0.15156388219417125, -0.0259623652453185, -0.08246306130916564, -0.19869336575336893, 0.11288885596800159, -0.08903827695253975, 0.14777507621599842, -0.20383837787148945, -0.2701694328350002, 0.01006888842284676, 0.18394183923551358, -0.19882002762878556, -0.14494481255018227, -0.21456365917024273]], [[0.15047034695534556, 0.11446070481153876, -0.2538512027839524, -0.007401591171777652, -0.2850503138526963, 0.190067662963421, 0.0014163840460101164, -0.31868974336778483, -0.20766710691240178, -0.13830180805586423, -0.2919791977730753, 0.0650696324001053, -0.1993861028844335, -0.31346200660629414, 0.10557657137353449, -0.2639498794477921, 0.2589060271882193, -0.2847388148230027, -0.13747583063360974], [-0.214984741935805, 0.28461643996154873, 0.03175538798822222, 0.09711030492212598, 0.2994460922999032, 0.14894346993826954, 0.015576503776027444, 0.040200023606218806, -0.3105567326452575, -0.2804864328945442, 0.27436169287121787, 0.15643161224076285, -0.20566297922064972, -0.2893977296204723, 0.04905575186380397, -0.28394994667186124, 0.17442722727479165, 0.1425281540039835, -0.10891236371934429], [0.25258150271847984, -0.022569942759347178, -0.1569707317778959, 0.26975021701274926, -0.045343746084643116, -0.17926954330664857, 0.08154496047522257, 0.266392251777689, 0.03228577764152702, 0.14832578163928412, 0.2616369440741886, -0.2744489126621054, -0.16692476161974515, 0.037341162377810676, 0.07432045232738013, 0.2574678441228187, -0.07484732174414102, 0.2875134405657508, -0.20459540674790735], [-0.02907247973930615, -0.3072934053933839, -0.15174823754566996, 0.29197283259021434, 0.30885208630779093, 0.20652134137784672, 0.11793361860059018, -0.12830052742217982, 0.2736562977265435, -0.25288137396202465, 0.32228646944596817, -0.09643769635000853, -0.13808814109199957, 0.09172283183990121, 0.17315956090655452, 0.290306023408105, 0.053951384935200165, -0.22566222929737914, 0.01112385911850839], [0.10321026731849857, -0.17048859445748668, 0.06227326596647685, 8.367911171909739E-4, 0.07196875027770187, 0.1784691650544449, 0.23254602004039332, 0.21896533719535277, 0.10091106655979229, -0.135056256388191, 0.07308983865603973, -0.1825850042102487, -0.020050957546718547, 0.28119577482771035, 0.23320042969710567, -0.11388036428639756, -0.13694376521090493, -0.14491272681257028, 0.29092092142901627], [-0.0701372220165266, 0.20199835849862965, 0.12338081177529873, -0.13584309664770733, -0.12127537601932767, 0.10597717210981883, 0.11456640094626311, -0.09946619909195406, -0.1390387118274719, -0.20709299293405248, 0.2939124163160691, -0.25169619604952, -0.018571344823108325, -0.2862942089591219, -0.11939211540139971, 0.0016714928238251766, 0.13558388971771482, -0.17161474782793296, -0.06355451204760505], [0.002008922629949959, 0.10622707791471964, -0.23074783843218413, 0.05535790714835222, 0.1560051920522304, -0.05495584790419971, -0.18368283298628788, 0.11562326472604163, 0.11697343364656847, 0.27982170785174654, -0.10569324510816093, 0.12375445407971616, 0.21785307814711904, 0.10168882189035304, 0.32153157637977686, -0.024822096219092815, -0.260923955465463, -0.09392612858860075, -0.04930775234784855], [0.08613812229987074, -0.30031972187879613, 0.1486065714090201, 0.017243563337291427, 0.15822842773802845, 0.17157246668618792, -0.1942631592591854, -0.015564065947202565, 0.27908454642003394, 0.28174760600907095, -0.20174708406860623, 0.2927720367521578, -0.20542427755036183, -0.13683031037648294, -0.10546122947733991, -0.2556535171950452, -0.20647437318158987, -0.25033715899957776, 0.03833316115481519], [0.1454622528898755, -0.3149152681713495, 0.1668080810728437, 0.19702509197870124, -0.15422192055027162, -0.1597894572413943, 0.05826670716793261, -0.2329424122433922, 0.031066351340828573, 0.21932445228662803, 0.02578067871674894, 0.1227469214711305, 0.071018296844318, -0.11355098639473978, 0.10263414868434177, -0.07955160481971857, -0.2942547308695952, 0.20699620120724796, 0.19783298249982845]]]"))
//    val trainer = Trainer(depth, 2, 21)
    val renderer = GameRenderer(0.0, 0.0, 1.0, program)

    init {

        program.apply {
            keyboard.keyDown.listen {
                when (it.key) {
                    KEY_ARROW_RIGHT -> {
                        update()
                    }
                }

                when (it.name) {
                    "n" -> {
                        if (it.modifiers.contains(KeyModifier.CTRL))
                            println(trainer.student.serialized)
                        else
                            println(trainer.student)
                    }
                    "t" -> {
                        if (it.modifiers.contains(KeyModifier.CTRL))
                            println(trainer.teacher.serialized)
                        else
                            println(trainer.teacher)
                    }
                    "b" -> {
                        println(trainer.moveSet.size)
                    }
                    "r" -> {
                        println("X: ${trainer.lastGames[trainer.teacher]?.get(Player.X)?.repeat}, " +
                                "O: ${trainer.lastGames[trainer.teacher]?.get(Player.O)?.repeat}")

                    }
                    "s" -> {
                        println(trainer.state)
                    }
                    "p" -> {
                        println(trainer.studentPlayer)
                    }
                    "g" -> {
                        println(trainer.totalGamesPlayed)
                    }
                    "w" -> {
                        println(trainer.winRatio)
                    }
                    "m" -> {
                        if (it.modifiers.contains(KeyModifier.CTRL))
//                            println(trainer.winRatio)
                        else
                            println(trainer.moveSet.size)
                    }
                    "c" -> {
                        println(trainer.cost)
                    }
                    "i" -> {
                        println(trainer.teacherIndex)
                    }
                }
            }
        }

        renderer.game = trainer.player.game

    }

    var slotChoices: List<Pair<List<Int>, Double>> = mutableListOf()

    private fun update() {
        trainer.update()
//        slotChoices = emptyList()
//        if (trainer.player.player == trainer.studentPlayer) {
//            slotChoices = buildList {
//                trainer.apply {
//                    student.fire(player.normalized.encode(studentPlayer)).last().forEachIndexed { i, value ->
//                        val stack = getStack(i)
//                        if (trainer.player.normalized.getSlot(stack).active)
//                            add(Pair(player.normal.inverse(stack), value))
//                    }
//                }
//            }
//            val max = slotChoices.maxByOrNull { it.second }?.second
//            if (max != null && max > 0.0) {
//                slotChoices = slotChoices.map { Pair(it.first, it.second / max) }
//            }
//        }
        when (trainer.state) {
            Trainer.State.REPLACEMENT -> println("Replaced. Played ${trainer.totalGamesPlayed} games")
//            Trainer.State.REPLACEMENT -> println(trainer.teacher)
//            Trainer.State.DESCENT -> println("win ratio: ${trainer.winRatio.sumOf { if (it) 1.0 else 0.0 } / trainer.winRatio.size}")
        }
    }


    private fun train(hertz: Double) {
        val start = System.nanoTime() * 1e-9
        while (System.nanoTime() * 1e-9 - start < 1 / hertz)
            update()
    }

    override fun Program.renderBody() {

        renderer.game = trainer.player.game
        renderer.render()
        if (keyboard.pressedKeys.contains("left-shift") && keyboard.pressedKeys.contains("arrow-right")) {
            train(60.0)
        }

//        if(slotChoices.isNotEmpty()) println(slotChoices.map { it.second })

        for (move in slotChoices) drawer.isolated {
            view *= renderer.fromBoard * getTransform(move.first)
            fill = foreground.opacify(move.second)
            stroke = null
            roundedRectangle(0.0, 0.0, 1.0, 1.0, 0.2)
        }


//        println(keyboard.pressedKeys)
    }


}